---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Explore Database">
  <div class="max-w-7xl mx-auto">
    <!-- Header Section -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">Database Explorer</h1>
      <p class="text-gray-600">
        Query and explore your database with visual tools or raw SQL
      </p>
    </div>

    <!-- Mode Toggle Card -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6">
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-3">
          <div
            class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center"
          >
            <svg
              class="w-5 h-5 text-blue-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
              ></path>
            </svg>
          </div>
          <div>
            <h3 class="font-semibold text-gray-900" id="modeTitle">
              Visual Query Builder
            </h3>
            <p class="text-sm text-gray-500" id="modeDescription">
              Build queries using an intuitive interface
            </p>
          </div>
        </div>
        <button
          id="toggleMode"
          class="inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors gap-2"
        >
          <svg
            class="w-4 h-4"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
          </svg>
          Switch to SQL Mode
        </button>
      </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <!-- Left Column - Query Builder -->
      <div class="lg:col-span-2">
        <!-- Visual Query Builder -->
        <div
          id="visualMode"
          class="bg-white rounded-xl shadow-sm border border-gray-200"
        >
          <div class="p-6 border-b border-gray-200">
            <h2
              class="text-lg font-semibold text-gray-900 flex items-center gap-2"
            >
              <svg
                class="w-5 h-5 text-blue-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 00-2 2v2a2 2 0 002 2m0 0h14m-14 0a2 2 0 01-2-2V7a2 2 0 012-2h14a2 2 0 012 2v2a2 2 0 01-2 2"
                ></path>
              </svg>
              Query Builder
            </h2>
          </div>

          <form id="exploreForm" class="p-6 space-y-6">
            <!-- Table Selection -->
            <div class="space-y-2">
              <label class="block text-sm font-medium text-gray-700"
                >Select Table</label
              >
              <select
                name="table"
                id="tableSelect"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white"
                required
              >
                <option value="">Choose a table...</option>
                <option value="users">üë• Users</option>
                <option value="cloud_accounts">‚òÅÔ∏è Cloud Accounts</option>
                <option value="security_events">üîí Security Events</option>
              </select>
            </div>

            <!-- Fields Selection -->
            <div class="space-y-2">
              <label class="block text-sm font-medium text-gray-700"
                >Select Fields</label
              >
              <div class="relative">
                <select
                  name="fields"
                  id="fieldSelect"
                  multiple
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white h-32"
                ></select>
                <div
                  class="absolute top-2 right-2 text-xs text-gray-400 pointer-events-none"
                >
                  Hold Ctrl/Cmd to select multiple
                </div>
              </div>
            </div>

            <!-- Query Options -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700"
                  >Order By</label
                >
                <select
                  name="order_by"
                  id="orderBySelect"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white"
                >
                  <option value="">No ordering</option>
                </select>
              </div>

              <div class="space-y-2">
                <label class="block text-sm font-medium text-gray-700"
                  >Order Direction</label
                >
                <select
                  name="order_dir"
                  id="orderDirSelect"
                  class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white"
                >
                  <option value="ASC">‚Üë Ascending</option>
                  <option value="DESC">‚Üì Descending</option>
                </select>
              </div>
            </div>

            <div class="space-y-2">
              <label class="block text-sm font-medium text-gray-700"
                >Limit Results</label
              >
              <input
                type="number"
                name="limit"
                id="limitInput"
                min="1"
                max="1000"
                placeholder="e.g., 100"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            <button
              type="submit"
              class="w-full flex items-center justify-center gap-2 bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition-colors font-medium"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
              Generate Query
            </button>
          </form>
        </div>

        <!-- SQL Editor Mode -->
        <div
          id="sqlMode"
          class="hidden bg-white rounded-xl shadow-sm border border-gray-200"
        >
          <div class="p-6 border-b border-gray-200">
            <h2
              class="text-lg font-semibold text-gray-900 flex items-center gap-2"
            >
              <svg
                class="w-5 h-5 text-purple-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
              </svg>
              SQL Editor
            </h2>
          </div>

          <div class="p-6 space-y-4">
            <div class="space-y-2">
              <label class="block text-sm font-medium text-gray-700"
                >Raw SQL Query</label
              >
              <textarea
                id="rawSQL"
                rows="8"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 font-mono text-sm bg-gray-50"
                placeholder="SELECT * FROM users WHERE ..."></textarea>
            </div>

            <div
              class="flex items-center gap-2 text-sm text-gray-500 bg-yellow-50 p-3 rounded-lg border border-yellow-200"
            >
              <svg
                class="w-4 h-4 text-yellow-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"
                ></path>
              </svg>
              Only SELECT statements are allowed for security
            </div>

            <button
              id="runSQL"
              class="w-full flex items-center justify-center gap-2 bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 transition-colors font-medium"
            >
              <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                ></path>
              </svg>
              Execute Query
            </button>
          </div>
        </div>
      </div>

      <!-- Right Column - Query Info -->
      <div class="space-y-6">
        <!-- Generated SQL Preview -->
        <div
          id="sqlPreview"
          class="bg-gray-50 rounded-xl border border-gray-200 p-6"
        >
          <h3
            class="text-sm font-medium text-gray-700 mb-3 flex items-center gap-2"
          >
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
              ></path>
            </svg>
            Generated SQL
          </h3>
          <pre
            id="sqlPreviewCode"
            class="text-xs text-gray-600 font-mono bg-white p-3 rounded border overflow-x-auto">Select a table to see the generated SQL...</pre>
        </div>

        <!-- Table Schema Info -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <h3
            class="text-sm font-medium text-gray-700 mb-3 flex items-center gap-2"
          >
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              ></path>
            </svg>
            Table Schema
          </h3>
          <div id="schemaInfo" class="text-sm text-gray-500">
            Select a table to view its schema
          </div>
        </div>

        <!-- Quick Actions -->
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
          <h3
            class="text-sm font-medium text-gray-700 mb-3 flex items-center gap-2"
          >
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
            Quick Actions
          </h3>
          <div class="space-y-2">
            <button
              class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-50 rounded-lg transition-colors"
              onclick="setQuickQuery('SELECT * FROM users LIMIT 10')"
            >
              üìä Show first 10 users
            </button>
            <button
              class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-50 rounded-lg transition-colors"
              onclick="setQuickQuery('SELECT COUNT(*) as total FROM users')"
            >
              üî¢ Count all users
            </button>
            <button
              class="w-full text-left px-3 py-2 text-sm text-gray-600 hover:bg-gray-50 rounded-lg transition-colors"
              onclick="setQuickQuery('SELECT * FROM security_events ORDER BY timestamp DESC LIMIT 5')"
            >
              üîí Latest security events
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Results Section -->
    <div id="results" class="mt-8"></div>
  </div>

  <script type="module">
    const tableSelect = document.getElementById("tableSelect");
    const fieldSelect = document.getElementById("fieldSelect");
    const orderBySelect = document.getElementById("orderBySelect");
    const resultsDiv = document.getElementById("results");
    const form = document.getElementById("exploreForm");
    const toggleBtn = document.getElementById("toggleMode");
    const sqlModeDiv = document.getElementById("sqlMode");
    const visualModeDiv = document.getElementById("visualMode");
    const runSQLBtn = document.getElementById("runSQL");
    const rawSQLInput = document.getElementById("rawSQL");
    const sqlPreviewCode = document.getElementById("sqlPreviewCode");
    const modeTitle = document.getElementById("modeTitle");
    const modeDescription = document.getElementById("modeDescription");
    const schemaInfo = document.getElementById("schemaInfo");

    const tableFields = {
      users: ["id", "name", "email"],
      cloud_accounts: ["id", "provider", "account_name", "user_id"],
      security_events: [
        "id",
        "cloud_account_id",
        "event_type",
        "severity",
        "timestamp",
      ],
    };

    const tableSchemas = {
      users: [
        { field: "id", type: "INTEGER", description: "Primary key" },
        {
          field: "name",
          type: "VARCHAR(255)",
          description: "User's full name",
        },
        {
          field: "email",
          type: "VARCHAR(255)",
          description: "User's email address",
        },
      ],
      cloud_accounts: [
        { field: "id", type: "INTEGER", description: "Primary key" },
        {
          field: "provider",
          type: "VARCHAR(50)",
          description: "Cloud provider name",
        },
        {
          field: "account_name",
          type: "VARCHAR(255)",
          description: "Account display name",
        },
        {
          field: "user_id",
          type: "INTEGER",
          description: "Reference to users table",
        },
      ],
      security_events: [
        { field: "id", type: "INTEGER", description: "Primary key" },
        {
          field: "cloud_account_id",
          type: "INTEGER",
          description: "Reference to cloud_accounts",
        },
        {
          field: "event_type",
          type: "VARCHAR(100)",
          description: "Type of security event",
        },
        {
          field: "severity",
          type: "VARCHAR(20)",
          description: "Event severity level",
        },
        {
          field: "timestamp",
          type: "DATETIME",
          description: "When the event occurred",
        },
      ],
    };

    let currentMode = "visual";

    // Toggle between modes
    toggleBtn.addEventListener("click", () => {
      currentMode = currentMode === "visual" ? "sql" : "visual";

      if (currentMode === "sql") {
        visualModeDiv.classList.add("hidden");
        sqlModeDiv.classList.remove("hidden");
        toggleBtn.innerHTML = `
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
          </svg>
          Switch to Visual Mode
        `;
        modeTitle.textContent = "SQL Query Editor";
        modeDescription.textContent = "Write and execute raw SQL queries";
      } else {
        visualModeDiv.classList.remove("hidden");
        sqlModeDiv.classList.add("hidden");
        toggleBtn.innerHTML = `
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
          </svg>
          Switch to SQL Mode
        `;
        modeTitle.textContent = "Visual Query Builder";
        modeDescription.textContent =
          "Build queries using an intuitive interface";
      }

      resultsDiv.innerHTML = "";
    });

    // Update fields and order options on table change
    tableSelect.addEventListener("change", () => {
      const selectedTable = tableSelect.value;
      const fields = tableFields[selectedTable] || [];

      fieldSelect.innerHTML = "";
      orderBySelect.innerHTML = '<option value="">No ordering</option>';

      fields.forEach((field) => {
        const opt = document.createElement("option");
        opt.value = field;
        opt.textContent = field;
        fieldSelect.appendChild(opt);

        const orderOpt = opt.cloneNode(true);
        orderBySelect.appendChild(orderOpt);
      });

      // Update schema info
      if (selectedTable && tableSchemas[selectedTable]) {
        const schema = tableSchemas[selectedTable];
        schemaInfo.innerHTML = `
          <div class="space-y-2">
            ${schema
              .map(
                (field) => `
              <div class="flex justify-between items-start text-xs">
                <div>
                  <span class="font-medium text-gray-700">${field.field}</span>
                  <div class="text-gray-500">${field.description}</div>
                </div>
                <span class="text-blue-600 font-mono">${field.type}</span>
              </div>
            `
              )
              .join("")}
          </div>
        `;
      } else {
        schemaInfo.innerHTML =
          '<div class="text-sm text-gray-500">Select a table to view its schema</div>';
      }

      updateSQLPreview();
    });

    // Update SQL preview when form changes
    function updateSQLPreview() {
      const table = tableSelect.value;
      if (!table) {
        sqlPreviewCode.textContent =
          "Select a table to see the generated SQL...";
        return;
      }

      const fields = Array.from(fieldSelect.selectedOptions).map(
        (opt) => opt.value
      );
      const limit = document.getElementById("limitInput").value;
      const orderBy = orderBySelect.value;
      const orderDir = document.getElementById("orderDirSelect").value;

      let sql = `SELECT ${fields.length ? fields.join(", ") : "*"} FROM ${table}`;

      if (orderBy) {
        sql += ` ORDER BY ${orderBy} ${orderDir}`;
      }

      if (limit) {
        sql += ` LIMIT ${limit}`;
      }

      sqlPreviewCode.textContent = sql;
    }

    // Add event listeners for real-time SQL preview
    fieldSelect.addEventListener("change", updateSQLPreview);
    document
      .getElementById("limitInput")
      .addEventListener("input", updateSQLPreview);
    orderBySelect.addEventListener("change", updateSQLPreview);
    document
      .getElementById("orderDirSelect")
      .addEventListener("change", updateSQLPreview);

    // Visual Query Submit
    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      const table = tableSelect.value;
      const fields = Array.from(fieldSelect.selectedOptions).map(
        (opt) => opt.value
      );
      const limit = document.getElementById("limitInput").value;
      const orderBy = orderBySelect.value;
      const orderDir = document.getElementById("orderDirSelect").value;

      const params = new URLSearchParams();
      params.append("table", table);
      params.append("fields", fields.join(","));
      if (limit) params.append("limit", limit);
      if (orderBy) params.append("order_by", orderBy);
      if (orderDir) params.append("order_dir", orderDir);

      try {
        const res = await fetch(`/api/explore?${params.toString()}`);
        const data = await res.json();
        renderTable(data, `Query executed successfully`);
      } catch (error) {
        renderError("Failed to execute query");
      }
    });

    // Raw SQL Submit
    runSQLBtn.addEventListener("click", async () => {
      const raw = rawSQLInput.value.trim();
      if (!/^select/i.test(raw)) {
        renderError("Only SELECT statements are allowed for security reasons.");
        return;
      }

      try {
        const res = await fetch(
          `/api/explore?raw_sql=${encodeURIComponent(raw)}`
        );
        const data = await res.json();
        renderTable(data, `SQL executed successfully`);
      } catch (error) {
        renderError("Failed to execute SQL query");
      }
    });

    // Quick query function
    window.setQuickQuery = function (query) {
      if (currentMode !== "sql") {
        toggleBtn.click();
      }
      rawSQLInput.value = query;
    };

    // Enhanced table renderer
    function renderTable(data, message = null) {
      if (!Array.isArray(data) || data.length === 0) {
        resultsDiv.innerHTML = `
          <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-8 text-center">
            <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <h3 class="text-lg font-medium text-gray-900 mb-2">No Results Found</h3>
            <p class="text-gray-500">Your query didn't return any data. Try adjusting your parameters.</p>
          </div>
        `;
        return;
      }

      const tableHtml = `
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
          <div class="p-6 border-b border-gray-200">
            <div class="flex items-center justify-between">
              <h2 class="text-lg font-semibold text-gray-900 flex items-center gap-2">
                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Query Results
              </h2>
              <span class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                ${data.length} row${data.length !== 1 ? "s" : ""}
              </span>
            </div>
            ${message ? `<p class="text-sm text-green-600 mt-2">${message}</p>` : ""}
          </div>
          <div class="overflow-x-auto">
            <table class="w-full">
              <thead class="bg-gray-50">
                <tr>
                  ${Object.keys(data[0])
                    .map(
                      (col) =>
                        `<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">${col}</th>`
                    )
                    .join("")}
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                ${data
                  .map(
                    (row, index) => `
                  <tr class="${index % 2 === 0 ? "bg-white" : "bg-gray-50"} hover:bg-blue-50 transition-colors">
                    ${Object.values(row)
                      .map(
                        (val) =>
                          `<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${val || '<span class="text-gray-400">null</span>'}</td>`
                      )
                      .join("")}
                  </tr>
                `
                  )
                  .join("")}
              </tbody>
            </table>
          </div>
        </div>
      `;
      resultsDiv.innerHTML = tableHtml;
    }

    function renderError(message) {
      resultsDiv.innerHTML = `
        <div class="bg-white rounded-xl shadow-sm border border-red-200 p-6">
          <div class="flex items-center gap-3 text-red-600">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"></path>
            </svg>
            <span class="font-medium">${message}</span>
          </div>
        </div>
      `;
    }
  </script>
</BaseLayout>
